spring:
    config:
        import: optional:file:.env[.properties]
    application:
        name: spring-docker
    datasource:
        url: ${SPRING_DATASOURCE_URL}
        username: ${SPRING_DATASOURCE_USERNAME}
        password: ${SPRING_DATASOURCE_PASSWORD}
        driverClassName: org.postgresql.Driver
        hikari:
            maximum-pool-size: 1000
    data:
        web:
            pageable:
                one-indexed-parameters: true
    h2:
        console:
            enable: true
    jpa:
        database: postgresql
        properties:
            hibernate:
                boot:
                    allow_jdbc_metadata_access: false
                jdbc:
                    time_zone: Asia/Manila
        hibernate:
            ddl-auto: update
    # kafka:
    #     consumer:
    #         group-id: my-group-id
    #         bootstrap-servers: localhost:9092
    #         key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
    #         value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
    #     producer:
    #         bootstrap-servers: localhost:9092
    #         key-serializer: org.apache.kafka.common.serialization.StringSerializer
    #         value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
server:
    # port: 28279
    port: 8888
    compression:
        enabled: true
        mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
        min-response-size: 2048
security:
    jwt:
        secret-key: ${SPRING_SECURITY_JWT_SECRET_KEY}
        # secret-key: gatj5MGWFdF9tvSg5tYNYOnCTMbBGyQdij4UJBXMnKHxTHEBiukrY1M0WPQBBm1kR6XNuCqDPQ6HGHib8bqUjbvS1PUxW4FjGGsZHGOAxA8andmCqbyvc1gggSzYohXfMCXH2zwKiB71If61jCGmM5fdNAJLlz3SPH9a7rMHFKGy5rqcRFkx9GH2OTFBhdV5vANnYIdRll4tcINFm6s0WWqLQeM1WoGNLBBtrq0EOfyTqQnDKeCGDJAwKjsNQQuPeY5wKyjPGvdvMoO6TIbkYCum6TOXPV2KDWuVhIWwnGpPyhX0dnMx2xzCPPNzn6J12dgKPp16dM2BA==
        # 15 * 60 * 1000
        access-expiration-time: ${SPRING_SECURITY_JWT_ACCESS_EXP}
        # access-expiration-time: 900000

        # 60 * 60 * 1000 -> minutes
        # 60 * 60 * 24 * 1000 -> hours
        refresh-expiration-time: ${SPRING_SECURITY_JWT_REFRESH_EXP}
        # refresh-expiration-time: 86400000
